applicationApiVersion: v1beta1

properties:
  name:
    type: string
    x-google-marketplace:
      type: NAME

  namespace:
    type: string
    x-google-marketplace:
      type: NAMESPACE

  myelin.licence:
    type: string
    title: Myelin Licence
    description: Licence

  myelin.axonController.dockerNamespace:
    type: string
    title: Google Container Registry namespace
    description: Namespace where Myelin stores images
    default: built-images

  myelin.axonController.config.artifactRepository.s3.bucket:
    type: string
    title: Axon logs bucket
    description: Axon controller saves logs in this bucket

  myelin.axonController.config.artifactRepository.s3.region:
    type: string
    title: Axon logs bucket region

  myelin.deployerController.config.artifactRepository.s3.bucket:
    type: string
    title: Deployer logs bucket
    description: Deployer controller saves logs in this bucket

  myelin.deployerController.config.artifactRepository.s3.region:
    type: string
    title: Deployer logs bucket region

  marketplace.dockerSecret:
    type: string
    title: Docker Secret
    description: Copy your base64 encoded docker secret

  myelin.artifacts.accesskey:
    type: string
    title: Cloud Storage Access Key
    description: GCP storage access key

  myelin.artifacts.secretkey:
    type: string
    title: Cloud Storage Secret Key
    description: GCP storage secret key

  myelin.adminServer.adminUser:
    type: string
    title: Admin server user name

  myelin.adminServer.adminPass:
    type: string
    title: Admin server password

  myelin.adminServer.jwtToken:
    type: string
    title: Admin server JWT token

  myelin.adminServer.jwtKey:
    type: string
    title: Admin server JWT key

  myelin.prometheus.namespace:
    type: string
    title: Prometheus namespace

  myelin.prometheus.serviceName:
    type: string
    title: Prometheus service name

  myelin.prometheus-pushgateway.namespace:
    type: string
    title: Prometheus pushgateway namespace

  myelin.prometheus-pushgateway.serviceName:
    type: string
    title: Prometheus pushgateway service name

  myelin.axonController.prometheusRules.namespace:
    type: string
    title: Prometheus rules namespace

  myelin.adminServer.oidc.clientId:
    type: string
    title: OIDC client id

  myelin.adminServer.oidc.clientSecret:
    type: string
    title: OIDC client secret

  myelin.adminServer.oidc.nonce:
    type: string
    title: OIDC nonce

  myelin.adminServer.oidc.endpoint:
    type: string
    title: OIDC endpoint

  myelin.adminServer.oidc.scope:
    type: string
    title: OIDC scope

  myelin.adminServer.oidc.redirectUri:
    type: string
    title: OIDC redirect uri

  adminServerImage:
    type: string
    default: gcr.io/myelin-public/myelin/myelin-admin-server:v0.9.0
    x-google-marketplace:
      type: IMAGE
      image:
        generatedProperties:
          splitToRegistryRepoTag:
            registry: myelin.repository #gcr.io
            repo: myelin.adminServer.apiServer.imageName
            tag: myelin.adminServer.apiServer.imageVersion

#  adminServerWebappImage:
#    type: string
#    default: gcr.io/myelin-public/myelin:v0.1.22
#    x-google-marketplace:
#      type: IMAGE
#      image:
#        generatedProperties:
#          splitToRegistryRepoTag:
#            registry: myelin.repository #gcr.io
#            repo: myelin.adminServer.webappServer.imageName
#            tag: myelin.adminServer.webappServer.imageVersion

  axonControllerImage:
    type: string
    default: gcr.io/myelin-public/myelin/myelin-axon-controller:v0.10.0
    x-google-marketplace:
      type: IMAGE
      image:
        generatedProperties:
          splitToRegistryRepoTag:
            registry: myelin.repository #gcr.io
            repo: myelin.axonController.imageName
            tag: myelin.axonController.imageVersion

  deployerControllerImage:
    type: string
    default: gcr.io/myelin-public/myelin/myelin-deployer-controller:v0.10.0
    x-google-marketplace:
      type: IMAGE
      image:
        generatedProperties:
          splitToRegistryRepoTag:
            registry: myelin.repository #gcr.io
            repo: myelin.deployerController.imageName
            tag: myelin.deployerController.imageVersion

  metricServerImage:
    type: string
    default: gcr.io/myelin-public/myelin/myelin-metric-server:v0.10.0
    x-google-marketplace:
      type: IMAGE
      image:
        generatedProperties:
          splitToRegistryRepoTag:
            registry: myelin.repository #gcr.io
            repo: myelin.metricServer.imageName
            tag: myelin.metricServer.imageVersion

  triggerServerImage:
    type: string
    default: gcr.io/myelin-public/myelin/myelin-trigger-server:v0.10.0
    x-google-marketplace:
      type: IMAGE
      image:
        generatedProperties:
          splitToRegistryRepoTag:
            registry: myelin.repository #gcr.io
            repo: myelin.triggerServer.imageName
            tag: myelin.triggerServer.imageVersion

  triggerClientImage:
    type: string
    default: gcr.io/myelin-public/myelin/myelin-trigger-client:v0.10.0
    x-google-marketplace:
      type: IMAGE
      image:
        generatedProperties:
          splitToRegistryRepoTag:
            registry: myelin.repository #gcr.io
            repo: myelin.triggerClient.imageName
            tag: myelin.triggerClient.imageVersion

  deployerProxyImage:
    type: string
    default: gcr.io/myelin-public/myelin/myelin-deployer-proxy:v0.10.0
    x-google-marketplace:
      type: IMAGE
      image:
        generatedProperties:
          splitToRegistryRepoTag:
            registry: myelin.repository #gcr.io
            repo: myelin.deployerProxy.imageName
            tag: myelin.deployerProxy.imageVersion

  myelin.serviceAccount.name:
    type: string
    title: Myelin App Service Account
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: >
          Service account for the controller.
        roles:
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups:
                  - ""
                resources:
                  - namespaces
                  - namespaces/exec
                verbs:
                  - list
              - apiGroups:
                  - ""
                resources:
                  - pods
                  - pods/exec
                  - pods/log
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - ""
                resources:
                  - configmaps
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - "*"
                resources:
                  - horizontalpodautoscalers
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - ""
                resourceNames:
                  - myelin-admin-dashboard-csrf
                  - myelin-admin-key-holder
                  - myelin-admin-certs
                  - myelin-admin-secret
                resources:
                  - secrets
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - ""
                resourceNames:
                  - regcred
                resources:
                  - secrets
                verbs:
                  - get
              - apiGroups:
                  - ""
                resources:
                  - secrets
                verbs:
                  - create
              - apiGroups:
                  - ""
                resources:
                  - persistentvolumeclaims
                verbs:
                  - create
                  - delete
              - apiGroups:
                  - argoproj.io
                resources:
                  - workflows
                  - workflows/finalizers
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - myelin.io
                resources:
                  - axons
                  - axons/finalizers
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - myelin.io
                resources:
                  - deployers
                  - deployers/finalizers
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - machinelearning.seldon.io
                resources:
                  - seldondeployments
                  - seldondeployments/finalizers
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - monitoring.coreos.com
                resources:
                  - alertmanagers
                  - prometheuses
                  - servicemonitors
                  - prometheusrules
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              # Deployer
              - apiGroups:
                  - apps
                resources:
                  - deployments
                  - deployments/exec
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - ""
                resources:
                  - services
                  - services/exec
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - "networking.istio.io"
                resources:
                  - virtualservices
                  - virtualservices/exec
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - "networking.istio.io"
                resources:
                  - destinationrules
                  - destinationrules/exec
                  - gateways
                  - gateways/exec
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - "security.istio.io"
                resources:
                  - authorizationpolicies
                  - requestauthentications
                  - peerauthentications
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete
              - apiGroups:
                  - "batch"
                resources:
                  - cronjobs
                  - cronjobs/exec
                verbs:
                  - create
                  - get
                  - list
                  - watch
                  - update
                  - patch
                  - delete

  myelin.prometheus-op.prometheusOperator.serviceAccount.name:
    type: string
    title: Prometheus Operator Service Account
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: >
          Service account of the Prometheus Operator
        roles:
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups:
                  - apiextensions.k8s.io
                resources:
                  - customresourcedefinitions
                verbs:
                  - '*'
              - apiGroups:
                  - "monitoring.coreos.com"
                resources:
                  - alertmanagers
                  - prometheuses
                  - prometheuses/finalizers
                  - alertmanagers/finalizers
                  - servicemonitors
                  - prometheusrules
                verbs:
                  - '*'
              - apiGroups:
                  - apps
                resources:
                  - statefulsets
                verbs:
                  - '*'
              - apiGroups:
                  - ""
                resources:
                  - configmaps
                  - secrets
                verbs:
                  - '*'
              - apiGroups:
                  - ""
                resources:
                  - pods
                verbs:
                  - list
                  - delete
              - apiGroups:
                  - ""
                resources:
                  - services
                  - endpoints
                verbs:
                  - get
                  - create
                  - update
              - apiGroups:
                  - ""
                resources:
                  - nodes
                verbs:
                  - list
                  - watch
              - apiGroups:
                  - ""
                resources:
                  - namespaces
                verbs:
                  - get
                  - list
                  - watch

  myelin.nfs-server.rbac.serviceAccountName:
    type: string
    title: NFS Server Service Account
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: >
          Service account to use for NFS
        roles:
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: [""]
                resources: ["persistentvolumes"]
                verbs: ["get", "list", "watch", "create", "delete"]
              - apiGroups: [""]
                resources: ["persistentvolumeclaims"]
                verbs: ["get", "list", "watch", "update"]
              - apiGroups: ["storage.k8s.io"]
                resources: ["storageclasses"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["list", "watch", "create", "update", "patch"]
              - apiGroups: [""]
                resources: ["services", "endpoints"]
                verbs: ["get"]
              - apiGroups: ["extensions"]
                resources: ["podsecuritypolicies"]
                resourceNames: ["nfs-provisioner"]
                verbs: ["use"]
              - apiGroups: [""]
                resources: ["endpoints"]
                verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]

required:
  - name
  - namespace

x-google-marketplace:
  clusterConstraints:
    istio:
      type: REQUIRED

form:
  - widget: help
    description: >-
      <br><b>Thank you for using Myelin!</b><P><br>
      <b>Before deploying Myelin to your cluster, go through
      <a href="https://myelin.io/docs/ops/setup/gcp/gcp_marketplace_prerequisites/">these initial installation steps.</a><P>
      <b>Namespace:</b> select a namespace that has istio-injection enabled.<P>
      <b>App instance name: name the application.<P>
      <b>Myelin Licence:</b> Request a 30 day fully functional licence from <a href="https://myelin.io/#licence">here</a><P>
      <b>Google Container Registry namespace:</b> This is the namespace that Myelin uses to store build images (PROJECT_ID/namespace). Myelin automatically creates this namespace if it does not exist.<P>
      <b>Buckets:</b> Specify the buckets and their region which Myelin can use to store logs.<P>
      <b>Docker Secret:</b> To obtain this token, go to IAM ->
      <a href="https://console.cloud.google.com/iam-admin/serviceaccounts">Service Accounts</a>, click on <i>Actions</i> for the
      service account that you'd like to use, then click <i>Create key</i>. Download the key as JSON then convert the file to
      a base64 encoded string: echo -n '_json_key:' | cat - key.json | base64<P>
      Enable s3 interoperability for Google Storage <a href="https://console.cloud.google.com/storage/settings">here</a>.
      Select the interoperability tab and create a new key, which can be used for the following:<P>
      <b>Cloud Storage Access Key:</b> gcp access key<P>
      <b>Cloud Storage Secret Key:</b> gcp secret key<P>
      <b>Admin Server User Name:</b> Myelin UI user name can be set here.<P>
      <b>Admin Server Password:</b> Myelin UI password to set here.<P>
      <b>Admin Server JWT Token:</b> Myelin UI JWT token.<P>

      <b>Service accounts:</b> These service accounts are recommended to be kept as <i>create a new service account</i>,
      because they are linked to cluster roles that are created as part of
      <a href="https://myelin.io/docs/ops/setup/gcp/gcp_marketplace_prerequisites/">the initial installation steps.</a>